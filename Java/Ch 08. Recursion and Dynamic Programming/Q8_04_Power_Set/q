Power Set: Write a method to return all subsets of a set.


We should first have some reasonable expectations of our time and space complexity.
How many subsets of a set are there? When we generate a subset, each element has the "choice" of either
being in there or not. That is, for the first element, there are two choices: it is either in the set or it is not. For
the second, there are two, etc. So, doing { 2 * 2 * . . . } n times gives us 2" subsets.
Assuming that we're going to be returning a list of subsets, then our best case time is actually the total
number of elements across all of those subsets. There are 2" subsets and each of the n elements will be
contained in half of the subsets (i.e (2 raisedTo n / 2) = 2 raisedTo (n- 1) subsets). Therefore, the total number of elements across all of
those subsets is n * 2 raisedTo (n-1).
We will not be able to beat O(n * 2 raisedTo n) in space or time complexity.
The subsets of {a1 , a2 , ••• , an} are also called the powerset P({a1, a2 , ••• , an}), or just P(n).
